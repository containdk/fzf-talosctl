name: Release fzf-talosctl

# This workflow runs when a new tag is pushed that matches the pattern 'v*.*.*'
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # The workflow needs write permissions to the repository contents to create a release.
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Package fzf-talosctl script
        run: |
          # Create a directory for the package contents.
          mkdir -p dist

          # Copy the script and other relevant files into the directory.
          # IMPORTANT: Adjust the path to 'fzf-talosctl' if it's not in the root directory.
          # For example, if it's in a 'scripts' folder, use 'cp scripts/fzf-talosctl dist/'.
          cp fzf-talosctl dist/

          # It's good practice to include LICENSE and README files in your release package.
          # This assumes they exist in your repository root.
          cp LICENSE dist/
          cp README.md dist/

          # Create a compressed tarball. The version is taken from the tag name (e.g., v1.0.0).
          tar -czvf fzf-talosctl-${{ github.ref_name }}.tar.gz -C dist .

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2
        with:
          # This action will create a new release on GitHub.
          # The body of the release notes will be automatically generated from your commit history.
          generate_release_notes: true
          # The 'files' option specifies which files to upload as release assets.
          # It supports glob patterns to match the file(s) you created.
          files: fzf-talosctl-*.tar.gz

